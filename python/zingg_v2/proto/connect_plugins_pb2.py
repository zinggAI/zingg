# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: connect_plugins.proto
# Protobuf Python Version: 4.25.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15\x63onnect_plugins.proto\"\xa9\x01\n\x0eSubmitZinggJob\x12(\n\targumnets\x18\x01 \x01(\x0b\x32\n.ArgumentsR\targumnets\x12/\n\x0b\x63li_options\x18\x02 \x01(\x0b\x32\x0e.ClientOptionsR\ncliOptions\x12)\n\x0ein_memory_date\x18\x03 \x01(\x0cH\x00R\x0cinMemoryDate\x88\x01\x01\x42\x11\n\x0f_in_memory_date\"\x80\x02\n\x0f\x46ieldDefinition\x12)\n\nmatch_type\x18\x01 \x01(\x0e\x32\n.MatchTypeR\tmatchType\x12\x1b\n\tdata_type\x18\x02 \x01(\tR\x08\x64\x61taType\x12\x1d\n\nfield_name\x18\x03 \x01(\tR\tfieldName\x12\x16\n\x06\x66ields\x18\x04 \x01(\tR\x06\x66ields\x12\"\n\nstop_words\x18\x05 \x01(\tH\x00R\tstopWords\x88\x01\x01\x12)\n\rabbreviations\x18\x06 \x01(\tH\x01R\rabbreviations\x88\x01\x01\x42\r\n\x0b_stop_wordsB\x10\n\x0e_abbreviations\"\xfc\x01\n\x04Pipe\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12#\n\x06\x66ormat\x18\x02 \x01(\x0e\x32\x0b.DataFormatR\x06\x66ormat\x12&\n\x05props\x18\x03 \x03(\x0b\x32\x10.Pipe.PropsEntryR\x05props\x12&\n\x0cschema_field\x18\x04 \x01(\tH\x00R\x0bschemaField\x88\x01\x01\x12\x17\n\x04mode\x18\x05 \x01(\tH\x01R\x04mode\x88\x01\x01\x1a\x38\n\nPropsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\x42\x0f\n\r_schema_fieldB\x07\n\x05_mode\"\xbe\x04\n\tArguments\x12\x1d\n\x06output\x18\x01 \x03(\x0b\x32\x05.PipeR\x06output\x12\x19\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32\x05.PipeR\x04\x64\x61ta\x12\x1b\n\tzingg_dir\x18\x03 \x01(\tR\x08zinggDir\x12\x30\n\x10training_samples\x18\x04 \x03(\x0b\x32\x05.PipeR\x0ftrainingSamples\x12=\n\x11\x66iield_definition\x18\x05 \x03(\x0b\x32\x10.FieldDefinitionR\x10\x66iieldDefinition\x12%\n\x0enum_partitions\x18\x06 \x01(\x05R\rnumPartitions\x12\x33\n\x16label_data_sample_size\x18\x07 \x01(\x02R\x13labelDataSampleSize\x12\x19\n\x08model_id\x18\x08 \x01(\tR\x07modelId\x12\x1c\n\tthreshold\x18\t \x01(\x02R\tthreshold\x12\x15\n\x06job_id\x18\n \x01(\x05R\x05jobId\x12\'\n\x0f\x63ollect_metrics\x18\x0b \x01(\x08R\x0e\x63ollectMetrics\x12!\n\x0cshow_concise\x18\x0c \x01(\x08R\x0bshowConcise\x12*\n\x11stop_words_cutoff\x18\r \x01(\x02R\x0fstopWordsCutoff\x12\x1d\n\nblock_size\x18\x0e \x01(\x05R\tblockSize\x12\x1b\n\x06\x63olumn\x18\x0f \x01(\tH\x00R\x06\x63olumn\x88\x01\x01\x42\t\n\x07_column\"\xc2\x04\n\rClientOptions\x12\x14\n\x05phase\x18\x01 \x01(\tR\x05phase\x12\x18\n\x07license\x18\x02 \x01(\tR\x07license\x12\x14\n\x05\x65mail\x18\x03 \x01(\tR\x05\x65mail\x12\x12\n\x04\x63onf\x18\x04 \x01(\tR\x04\x63onf\x12#\n\npreprocess\x18\x05 \x01(\tH\x00R\npreprocess\x88\x01\x01\x12\x1a\n\x06job_id\x18\x06 \x01(\tH\x01R\x05jobId\x88\x01\x01\x12\x1b\n\x06\x66ormat\x18\x07 \x01(\tH\x02R\x06\x66ormat\x88\x01\x01\x12 \n\tzingg_dir\x18\x08 \x01(\tH\x03R\x08zinggDir\x88\x01\x01\x12\x1e\n\x08model_id\x18\t \x01(\tH\x04R\x07modelId\x88\x01\x01\x12,\n\x0f\x63ollect_metrics\x18\n \x01(\tH\x05R\x0e\x63ollectMetrics\x88\x01\x01\x12&\n\x0cshow_concise\x18\x0b \x01(\tH\x06R\x0bshowConcise\x88\x01\x01\x12\x1f\n\x08location\x18\x0c \x01(\tH\x07R\x08location\x88\x01\x01\x12\x1b\n\x06\x63olumn\x18\r \x01(\tH\x08R\x06\x63olumn\x88\x01\x01\x12\x1b\n\x06remote\x18\x0e \x01(\tH\tR\x06remote\x88\x01\x01\x42\r\n\x0b_preprocessB\t\n\x07_job_idB\t\n\x07_formatB\x0c\n\n_zingg_dirB\x0b\n\t_model_idB\x12\n\x10_collect_metricsB\x0f\n\r_show_conciseB\x0b\n\t_locationB\t\n\x07_columnB\t\n\x07_remote*\xde\x01\n\tMatchType\x12\x0c\n\x08MT_FUZZY\x10\x00\x12\x0c\n\x08MT_EXACT\x10\x01\x12\x0f\n\x0bMT_DONT_USE\x10\x02\x12\x0c\n\x08MT_EMAIL\x10\x03\x12\x0e\n\nMT_PINCODE\x10\x04\x12\x14\n\x10MT_NULL_OR_BLANK\x10\x05\x12\x0b\n\x07MT_TEXT\x10\x06\x12\x0e\n\nMT_NUMERIC\x10\x07\x12\x19\n\x15MT_NUMERIC_WITH_UNITS\x10\x08\x12\x1b\n\x17MT_ONLY_ALPHABETS_EXACT\x10\t\x12\x1b\n\x17MT_ONLY_ALPHABETS_FUZZY\x10\n*\xcc\x01\n\nDataFormat\x12\n\n\x06\x44\x46_CSV\x10\x00\x12\x0e\n\nDF_PARQUET\x10\x01\x12\x0b\n\x07\x44\x46_JSON\x10\x02\x12\x0b\n\x07\x44\x46_TEXT\x10\x03\x12\n\n\x06\x44\x46_XLS\x10\x04\x12\x0b\n\x07\x44\x46_AVRO\x10\x05\x12\x0b\n\x07\x44\x46_JDBC\x10\x06\x12\x10\n\x0c\x44\x46_CASSANDRA\x10\x07\x12\x10\n\x0c\x44\x46_SNOWFLAKE\x10\x08\x12\x0e\n\nDF_ELASTIC\x10\t\x12\r\n\tDF_EXACOL\x10\n\x12\x0e\n\nDF_BIGQUEY\x10\x0b\x12\x0f\n\x0b\x44\x46_INMEMORY\x10\x0c\x42\x1d\n\x19zingg.spark.connect.protoP\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'connect_plugins_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\031zingg.spark.connect.protoP\001'
  _globals['_PIPE_PROPSENTRY']._options = None
  _globals['_PIPE_PROPSENTRY']._serialized_options = b'8\001'
  _globals['_MATCHTYPE']._serialized_start=1870
  _globals['_MATCHTYPE']._serialized_end=2092
  _globals['_DATAFORMAT']._serialized_start=2095
  _globals['_DATAFORMAT']._serialized_end=2299
  _globals['_SUBMITZINGGJOB']._serialized_start=26
  _globals['_SUBMITZINGGJOB']._serialized_end=195
  _globals['_FIELDDEFINITION']._serialized_start=198
  _globals['_FIELDDEFINITION']._serialized_end=454
  _globals['_PIPE']._serialized_start=457
  _globals['_PIPE']._serialized_end=709
  _globals['_PIPE_PROPSENTRY']._serialized_start=627
  _globals['_PIPE_PROPSENTRY']._serialized_end=683
  _globals['_ARGUMENTS']._serialized_start=712
  _globals['_ARGUMENTS']._serialized_end=1286
  _globals['_CLIENTOPTIONS']._serialized_start=1289
  _globals['_CLIENTOPTIONS']._serialized_end=1867
# @@protoc_insertion_point(module_scope)
